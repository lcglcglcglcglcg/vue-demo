(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2584ae92"],{"4afe":function(t,e,n){"use strict";n.r(e);var o=function(){var t=this;t._self._c;return t._m(0)},i=[function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"overlay"}},[e("ul",[e("li",{staticClass:"title"},[t._v("Select Music")]),e("li",[e("button",{staticClass:"btn",attrs:{id:"btnA",type:"button"}},[t._v("Snowflakes Falling Down by Simon Panrucker")])]),e("li",[e("button",{staticClass:"btn",attrs:{id:"btnB",type:"button"}},[t._v("This Christmas by Dott")])]),e("li",[e("button",{staticClass:"btn",attrs:{id:"btnC",type:"button"}},[t._v("No room at the inn by TRG Banks")])]),e("li",[e("button",{staticClass:"btn",attrs:{id:"btnD",type:"button"}},[t._v("Jingle Bell Swing by Mark Smeby")])]),e("li",{staticClass:"separator"},[t._v("OR")]),e("li",[e("input",{attrs:{type:"file",id:"upload",hidden:""}}),e("label",{attrs:{for:"upload"}},[t._v("Upload File")])])])])}],a=(n("14d9"),{data(){return{}},mounted(){const{PI:t,sin:e,cos:n}=Math,o=2*t,i=(t,e,n,o,i)=>o+(t-e)/(n-e)*(i-o),a=(t,e=0)=>Array(t).fill(e).map((t,e)=>t+e),r=(t,e=0)=>e+Math.random()*(t-e),s=(t,e=0)=>Math.floor(e+Math.random()*(t-e)),l=t=>t[s(t.length)],u=(t,o=1)=>[o*n(t),o*e(t)];let d,c,p,m,f=0;const v={time:{type:"f",value:0},step:{type:"f",value:0}},E={exposure:1,bloomStrength:.9,bloomThreshold:0,bloomRadius:.5};let h;const g=2048,w=4e3,b=new THREE.AudioListener,T=new THREE.Audio(b);document.querySelector("input").addEventListener("change",H,!1);const _=document.querySelectorAll(".btn");function y(){const t=document.getElementById("overlay");t.remove(),d=new THREE.Scene,p=new THREE.WebGLRenderer({antialias:!0}),p.setPixelRatio(window.devicePixelRatio),p.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(p.domElement),c=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,1,1e3),c.position.set(-.09397456774197047,-2.5597086635726947,24.420789670889008),c.rotation.set(.10443543723052419,-.003827152981119352,.0004011488708739715);const e=p.capabilities.isWebGL2?THREE.RedFormat:THREE.LuminanceFormat;v.tAudioData={value:new THREE.DataTexture(m.data,g/2,1,e)},M(d,v,3e3),A(d,v),a(10).map(t=>{C(d,v,w,[20,0,-20*t]),C(d,v,w,[-20,0,-20*t])});const n=new THREE.RenderPass(d,c),o=new THREE.UnrealBloomPass(new THREE.Vector2(window.innerWidth,window.innerHeight),1.5,.4,.85);o.threshold=E.bloomThreshold,o.strength=E.bloomStrength,o.radius=E.bloomRadius,h=new THREE.EffectComposer(p),h.addPass(n),h.addPass(o),P(c,p,h),R()}function R(t){m.getFrequencyData(),v.tAudioData.value.needsUpdate=!0,f=(f+1)%1e3,v.time.value=t,v.step.value=f,h.render(),requestAnimationFrame(R)}function x(t){document.getElementById("overlay").innerHTML='<div class="text-loading">Please Wait...</div>';const e=["https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Simon_Panrucker/Happy_Christmas_You_Guys/Simon_Panrucker_-_01_-_Snowflakes_Falling_Down.mp3","https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Dott/This_Christmas/Dott_-_01_-_This_Christmas.mp3","https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/TRG_Banks/TRG_Banks_Christmas_Album/TRG_Banks_-_12_-_No_room_at_the_inn.mp3","https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Mark_Smeby/En_attendant_Nol/Mark_Smeby_-_07_-_Jingle_Bell_Swing.mp3"],n=e[t],o=new THREE.AudioLoader;o.load(n,(function(t){T.setBuffer(t),T.play(),m=new THREE.AudioAnalyser(T,g),y()}))}function H(t){document.getElementById("overlay").innerHTML='<div class="text-loading">Please Wait...</div>';const e=t.target.files,n=new FileReader;n.onload=function(t){var e=t.target.result;b.context.decodeAudioData(e,(function(t){T.setBuffer(t),T.play(),m=new THREE.AudioAnalyser(T,g),y()}))},n.readAsArrayBuffer(e[0])}function C(t,e,n,a){const s="\n  attribute float mIndex;\n  varying vec3 vColor;\n  varying float opacity;\n  uniform sampler2D tAudioData;\n\n  float norm(float value, float min, float max ){\n      return (value - min) / (max - min);\n  }\n  float lerp(float norm, float min, float max){\n  return (max - min) * norm + min;\n  }\n\n  float map(float value, float sourceMin, float sourceMax, float destMin, float destMax){\n  return lerp(norm(value, sourceMin, sourceMax), destMin, destMax);\n  }\n\n\n  void main() {\n      vColor = color;\n      vec3 p = position;\n      vec4 mvPosition = modelViewMatrix * vec4( p, 1.0 );\n      float amplitude = texture2D( tAudioData, vec2( mIndex, 0.1 ) ).r;\n      float amplitudeClamped = clamp(amplitude-0.4,0.0, 0.6 );\n      float sizeMapped = map(amplitudeClamped, 0.0, 0.6, 1.0, 20.0);\n      opacity = map(mvPosition.z , -200.0, 15.0, 0.0, 1.0);\n      gl_PointSize = sizeMapped * ( 100.0 / -mvPosition.z );\n      gl_Position = projectionMatrix * mvPosition;\n  }\n",l="\n  varying vec3 vColor;\n  varying float opacity;\n  uniform sampler2D pointTexture;\n  void main() {\n      gl_FragColor = vec4( vColor, opacity );\n      gl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord ); \n  }\n  ",d=new THREE.ShaderMaterial({uniforms:{...e,pointTexture:{value:(new THREE.TextureLoader).load("https://assets.codepen.io/3685267/spark1.png")}},vertexShader:s,fragmentShader:l,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0,vertexColors:!0}),c=new THREE.BufferGeometry,p=[],m=[],f=[],v=[],E=[],h=new THREE.Color;for(let _=0;_<n;_++){const t=Math.random(),e=i(t,0,1,-8,10),a=i(t,0,1,0,6*o)+o/2*(_%2),[s,l]=u(a,i(t,0,1,5,0)),d=i(t,0,1,1,0);p.push(l+r(-.3*d,.3*d)),p.push(e+r(-.3*d,.3*d)),p.push(s+r(-.3*d,.3*d)),h.setHSL(i(_,0,n,1,0),1,.5),m.push(h.r,h.g,h.b),v.push(r(1e3)),f.push(1);const c=i(_,0,n,1,0);E.push(c)}c.setAttribute("position",new THREE.Float32BufferAttribute(p,3).setUsage(THREE.DynamicDrawUsage)),c.setAttribute("color",new THREE.Float32BufferAttribute(m,3)),c.setAttribute("size",new THREE.Float32BufferAttribute(f,1)),c.setAttribute("phase",new THREE.Float32BufferAttribute(v,1)),c.setAttribute("mIndex",new THREE.Float32BufferAttribute(E,1));const g=new THREE.Points(c,d),[w,b,T]=a;g.position.x=w,g.position.y=b,g.position.z=T,t.add(g)}function A(t,e){const n="\n  attribute float size;\n  attribute float phase;\n  attribute float phaseSecondary;\n\n  varying vec3 vColor;\n  varying float opacity;\n\n\n  uniform float time;\n  uniform float step;\n\n  float norm(float value, float min, float max ){\n      return (value - min) / (max - min);\n  }\n  float lerp(float norm, float min, float max){\n      return (max - min) * norm + min;\n  }\n\n  float map(float value, float sourceMin, float sourceMax, float destMin, float destMax){\n      return lerp(norm(value, sourceMin, sourceMax), destMin, destMax);\n  }\n  void main() {\n      float t = time* 0.0006;\n\n      vColor = color;\n\n      vec3 p = position;\n\n      p.y = map(mod(phase+step, 1000.0), 0.0, 1000.0, 25.0, -8.0);\n\n      p.x += sin(t+phase);\n      p.z += sin(t+phaseSecondary);\n\n      opacity = map(p.z, -150.0, 15.0, 0.0, 1.0);\n\n      vec4 mvPosition = modelViewMatrix * vec4( p, 1.0 );\n\n      gl_PointSize = size * ( 100.0 / -mvPosition.z );\n\n      gl_Position = projectionMatrix * mvPosition;\n\n  }\n  ",o="\n  uniform sampler2D pointTexture;\n  varying vec3 vColor;\n  varying float opacity;\n\n  void main() {\n      gl_FragColor = vec4( vColor, opacity );\n      gl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord ); \n  }\n  ";function i(i){const a=300,s=new THREE.ShaderMaterial({uniforms:{...e,pointTexture:{value:(new THREE.TextureLoader).load(i)}},vertexShader:n,fragmentShader:o,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0,vertexColors:!0}),u=new THREE.BufferGeometry,d=[],c=[],p=[],m=[],f=[],v=new THREE.Color;for(let t=0;t<a;t++){const[t,e,n]=[r(25,-25),0,r(15,-150)];d.push(t),d.push(e),d.push(n),v.set(l(["#f1d4d4","#f1f6f9","#eeeeee","#f1f1e8"])),c.push(v.r,v.g,v.b),m.push(r(1e3)),f.push(r(1e3)),p.push(r(4,2))}u.setAttribute("position",new THREE.Float32BufferAttribute(d,3)),u.setAttribute("color",new THREE.Float32BufferAttribute(c,3)),u.setAttribute("size",new THREE.Float32BufferAttribute(p,1)),u.setAttribute("phase",new THREE.Float32BufferAttribute(m,1)),u.setAttribute("phaseSecondary",new THREE.Float32BufferAttribute(f,1));const E=new THREE.Points(u,s);t.add(E)}const a=["https://assets.codepen.io/3685267/snowflake1.png","https://assets.codepen.io/3685267/snowflake2.png","https://assets.codepen.io/3685267/snowflake3.png","https://assets.codepen.io/3685267/snowflake4.png","https://assets.codepen.io/3685267/snowflake5.png"];a.forEach(t=>{i(t)})}function M(t,e,n){const o="\n  attribute float size;\n  attribute vec3 customColor;\n  varying vec3 vColor;\n\n  void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n      gl_PointSize = size * ( 300.0 / -mvPosition.z );\n      gl_Position = projectionMatrix * mvPosition;\n\n  }\n  ",i="\n  uniform vec3 color;\n  uniform sampler2D pointTexture;\n  varying vec3 vColor;\n\n  void main() {\n      gl_FragColor = vec4( vColor, 1.0 );\n      gl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord );\n\n  }\n  ",a=new THREE.ShaderMaterial({uniforms:{...e,pointTexture:{value:(new THREE.TextureLoader).load("https://assets.codepen.io/3685267/spark1.png")}},vertexShader:o,fragmentShader:i,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0,vertexColors:!0}),s=new THREE.BufferGeometry,u=[],d=[],c=[],p=new THREE.Color;for(let f=0;f<n;f++){const[t,e,n]=[r(-25,25),0,r(-150,15)];u.push(t),u.push(e),u.push(n),p.set(l(["#93abd3","#f2f4c0","#9ddfd3"])),d.push(p.r,p.g,p.b),c.push(1)}s.setAttribute("position",new THREE.Float32BufferAttribute(u,3).setUsage(THREE.DynamicDrawUsage)),s.setAttribute("customColor",new THREE.Float32BufferAttribute(d,3)),s.setAttribute("size",new THREE.Float32BufferAttribute(c,1));const m=new THREE.Points(s,a);m.position.y=-8,t.add(m)}function P(t,e,n){document.addEventListener("keydown",e=>{const{x:n,y:o,z:i}=t.position,{x:a,y:r,z:s}=t.rotation}),window.addEventListener("resize",()=>{const o=window.innerWidth,i=window.innerHeight;t.aspect=o/i,t.updateProjectionMatrix(),e.setSize(o,i),n.setSize(o,i)},!1)}_.forEach((t,e)=>t.addEventListener("click",()=>x(e)))}}),r=a,s=(n("8576"),n("2877")),l=Object(s["a"])(r,o,i,!1,null,null,null);e["default"]=l.exports},8576:function(t,e,n){"use strict";n("e259")},e259:function(t,e,n){}}]);